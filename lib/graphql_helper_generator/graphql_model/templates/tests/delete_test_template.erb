RSpec.describe 'Delete<%= @camelize_name %>', type: :request do
  include_context 'authenticated user'

  def query()
  <%= "  <<~GQL" %>
    mutation Delete<%= @camelize_name %>($id: ID!) {
      delete<%= @camelize_name %>(input: {id: $id}) {
          id
          <%= 
            @parsed_fields.filter{|f| !f[:reference].present? }.map{|field| 
              var = field[:name].camelize
              var[0] = var[0].downcase
              var
            }.join("\n          ")
          %>
        }
      }
    GQL
  end

  it 'delete_<%= @snake_case_name %> success' do
    <%= @snake_case_name%> = create(:<%= @snake_case_name %>)
    variables = { id: <%= @snake_case_name%>.id }

    json = graphql(query, variables: variables)
    data = json['delete<%= @camelize_name %>']

    expect(data).to include('id' => <%= @snake_case_name%>.id)
    <%= 
      @parsed_fields.filter{|f| !f[:reference].present? }.map{|field| 
        var = field[:name].camelize
        var[0] = var[0].downcase
        "expect(data).to include('#{var}' => updated_#{@snake_case_name}.#{field[:name]})"
      }.join("\n    ")
    %>

    expect(<%= @camelize_name %>.count).to eq(0)
  end
end
